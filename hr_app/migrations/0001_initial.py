# Generated by Django 5.1.7 on 2025-03-28 21:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'hr_app_user',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('job_title', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('vacation_days_left', models.PositiveIntegerField(default=20, verbose_name='დარჩენილი შვებულების დღეები')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='პროფილის სურათი')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='hr_app.department')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='hr_app.employee', verbose_name='მენეჯერი')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'თანამშრომელი',
                'verbose_name_plural': 'თანამშრომლები',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('contract', 'კონტრაქტი'), ('id', 'პირადობის მოწმობა'), ('cv', 'CV'), ('certificate', 'სერტიფიკატი'), ('other', 'სხვა')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='hr_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('leave_type', models.CharField(choices=[('annual', 'ყოველწლიური'), ('sick', 'ავადმყოფობის'), ('personal', 'პირადი'), ('other', 'სხვა')], max_length=20)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'განხილვის პროცესში'), ('approved', 'დამტკიცებული'), ('rejected', 'უარყოფილი')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='hr_app.employee')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LocationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP მისამართი')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='განედი')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='გრძედი')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='დრო')),
                ('is_at_workplace', models.BooleanField(default=False, verbose_name='სამუშაო ადგილზეა')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_logs', to='hr_app.employee', verbose_name='თანამშრომელი')),
            ],
            options={
                'verbose_name': 'ლოკაციის ჩანაწერი',
                'verbose_name_plural': 'ლოკაციის ჩანაწერები',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='სათაური')),
                ('content', models.TextField(verbose_name='შინაარსი')),
                ('posted_at', models.DateTimeField(auto_now_add=True, verbose_name='გამოქვეყნების თარიღი')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_images/', verbose_name='სურათი')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_posts', to=settings.AUTH_USER_MODEL, verbose_name='გამომქვეყნებელი')),
            ],
            options={
                'verbose_name': 'სიახლე',
                'verbose_name_plural': 'სიახლეები',
                'ordering': ['-posted_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255, verbose_name='შეტყობინება')),
                ('read', models.BooleanField(default=False, verbose_name='წაკითხული')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='შექმნის თარიღი')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='მომხმარებელი')),
            ],
            options={
                'verbose_name': 'შეტყობინება',
                'verbose_name_plural': 'შეტყობინებები',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OnboardingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('documents', 'დოკუმენტაცია'), ('training', 'ტრენინგი'), ('equipment', 'აღჭურვილობა'), ('access', 'წვდომა')], max_length=20)),
                ('completed', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_tasks', to='hr_app.employee')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField()),
                ('performance_rating', models.IntegerField(choices=[(1, 'არადამაკმაყოფილებელი'), (2, 'საჭიროებს გაუმჯობესებას'), (3, 'დამაკმაყოფილებელი'), (4, 'კარგი'), (5, 'შესანიშნავი')])),
                ('strengths', models.TextField()),
                ('areas_for_improvement', models.TextField()),
                ('goals', models.TextField()),
                ('comments', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='hr_app.employee')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'ადმინისტრატორი'), ('hr_manager', 'HR მენეჯერი'), ('employee', 'თანამშრომელი')], default='employee', max_length=20, verbose_name='როლი')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='role', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'როლი',
                'verbose_name_plural': 'როლები',
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='თარიღი')),
                ('hours_worked', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='ნამუშევარი საათები')),
                ('overtime', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='ზეგანაკვეთური')),
                ('notes', models.TextField(blank=True, verbose_name='შენიშვნები')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='hr_app.employee')),
            ],
            options={
                'verbose_name': 'დროის ჩანაწერი',
                'verbose_name_plural': 'დროის ჩანაწერები',
                'ordering': ['-date'],
            },
        ),
    ]
